[
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706059"
    },
    "id": 35,
    "category": "category 01",
    "title": "Creating a Coding Interview Study Guide",
    "content": [{
        "section_title": "section_title 01",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706041"
    },
    "id": 35,
    "category": "category 01",
    "title": "Competitive Coding - The Brain Sport For Coders..",
    "content": [{
        "section_title": "It teaches you how to think?",
        "section_content": [
          "If you are coder then you might understand the deep meaning of this line said by steve jobs. You might have experienced that even when you shut down your computer you keep on thinking about the code you have written in your project and then you will try to find out the solution of the problem in another way...",
          "You know what its ultimately increase your thinking power/process. When you enter in the world of programming you not only learn coding but also the art of thinking. Competitive programming is the game of brain where you have to use your coding as well as your brain power."
        ]
      },
      {
        "section_title": "Why You should play this game?",
        "section_content": [
          "Programming may be a challenging role and once you enter this field you'll encounter new challenges and you'll need to solve some problems which nobody has solved before or their solution doesn’t exist anywhere. At that point you're expected to return up with an answer within the least possible time using your problem-solving and logical ability. therefore the one and clear goal behind these competitive programming is “To prepare a programmer such his/her logical ability increases and he/she is in a position to write down code for the challenging situation”.",
          "Another reason is that big tech giants of the world that is Google, Facebook. Microsoft, Amazon hires candidate through competitive programming so if you would like to urge into these companies then you actually got to get your hands dirty in competitive programming."
        ]
      },
      {
        "section_title": "Did you want to know how to get started with competitive programming ? then let me know in the comment section. I will write an article on it... :D",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706060"
    },
    "id": 35,
    "category": "category 01",
    "title": "What are some of the weirdest things we Google as devs?",
    "content": [{
        "section_title": "Just something that came to mind, what are some of the weirdest things we Google as devs?",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "My #1 would be: How to remove children from parent"
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706042"
    },
    "id": 35,
    "category": "category 01",
    "title": "Webinar: Predicting the Stock Market with Watson Studio (2nd October, 2020)",
    "content": [{
        "section_title": "Anchal Bhalla",
        "section_content": [
          "On October 2nd, 2020, Data & AI Technical Specialist Anchal Bhalla​ & UAE Cloud Developer Advocate Mridul Bhandari conducted a webinar on Forecasting the Stock Market with Watson Studio.",
          "There were a total of 38 attendees including developers and students across MEA. The webinar started with a welcome note introducing the audience to IBM Developer Series and was divided into two primary sections, one of the sections briefing the audience about Data Science, Machine Learning & Quandl, and another section was the Code Pattern."
        ]
      },
      {
        "section_title": "The first part was led by Anchal Bhalla. Anchal started it off by introducing Data Science. She then explained the difference between Data Scientist, Data Engineer & Data Analyst. It was followed by Data Science Cycle, Data Analysis types, Machine Learning, Machine Learning Process, Machine Learning Types & Quandl API.",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "The second section of the webinar was conducted by Mridul Bhandari, which was towards forecasting the stock market. He started by showing the attendees how to instantiate Watson Studio on IBM Cloud and create a Cloud Object Storage. He then used the Quandl API to retrieve data from the API, imported the mined data as an asset into the Watson Studio Project, cleansed data with Data Refinery, made forecasts with IBM SPSS Software Modeler Flow, deployed the Modeler Flow Model with Watson Machine Learning, and validated the Model Stored in WML."
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "At the end of the webinar, the attendees were introduced to IBM Cloud Pak for Data and IBM Developer resources. Many of the attendees showed positive feedback and appreciation for the webinar."
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706061"
    },
    "id": 35,
    "category": "category 01",
    "title": "Login with Facebook using PHP [Step by Step]",
    "content": [{
        "section_title": "section_title 01",
        "section_content": [
          "We need to Fackbook login into many websites, it does not bother the user much, he login easily on the website and by login, we get all the data of the user like name email id age, etc. so in this tutorial, we learn Facebook login integration in PHP.",
          "Login with Facebook using PHP [Step by Step]"
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706043"
    },
    "id": 35,
    "category": "category 01",
    "title": "Testing React Hook Form With React Testing Library",
    "content": [{
        "section_title": "Let's start, as usual, by installing the required packages.",
        "section_content": [
          "In the previous post we have added a basic recipe form using React Hook Form. It would be a good idea to add some unit tests for it, to make sure that the form works properly and to catch any future regressions. We'll use React Testing Library (RTL) as a testing framework of choice, since it works really well with the Hook Form and is a recommended library to test it with. ",
          "npm install --save-dev @testing-library/react @testing-library/jest-dom"
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "Apart from the testing library, we also add jest-dom to be able to use custom Jest matchers. Now we can start writing tests for the Recipe component. Let's create Recipe.test.js file and add the first test checking that basic fields are properly rendered.",
          "line3"
        ]
      },
      {
        "section_title": "Normally saveData would make an API call to send the form data to the server or do some data processing. For the purposes of field validation we are only interested if this function is called or not, since if any of the fields are invalid, form's onSubmit callback is not invoked.",
        "section_content": [
          "Those familiar with the RTL might notice that we're not using getByText query here and instead default to getByRole. The latter is preferred because it resembles more closely how the users interact with the page - both using mouse/visual display and assistive technologies. This is one of the particularly compelling reasons to use RTL - if the code is written with the accessibility concerns in mind, the getByRole query will be sufficient in most of the cases. To be able to effectively use *ByRole queries, it's necessary to understand what ARIA role each HTML element has. In our form we use h1, which has heading role, text input and textarea with textbox role, number input with spinbutton role and button with button role. Since we have multiple elements with the same role, we can use the name option to narrow down the search and match specific elements. It has to be noted that this is not the name attribute we give to the input elements but their accessible name, which is used by assistive technologies to identify HTML elements. There are several rules that browsers use to compute accessible name. For our purposes, input's accessible name is computed from its associated elements, in this case its label. However for this to work, the label has to be properly associated with the input, e.g. the input is wrapped in the label or label has for attribute corresponding to the input's id. Now we see how having accessible forms makes testing them easier. For button, provided there's no aria-label or associated aria-labelledby attributes (which take precedence over other provided and native accessible names), the accessible name is computed using its content. In this case it's Add ingredient and Save texts. Additionally, we can use regex syntax to match the name, which is convenient, for example, for case-insensitive matches. ",
          "Now that we have basics tests done, let's move on to test field validation. Before that, we'll slightly modify the form component by adding saveData prop, which will be called on form submit. This way we can test if it has been called and inspect the arguments."
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706040"
    },
    "id": 35,
    "category": "category 01",
    "title": "TDD in Python with pytest",
    "content": [{
        "section_title": "Part 1 (this post) and part 2 contain a detailed example of unit testing.",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "Test-Driven Development (TDD) is fortunately one of the names that I can spot most frequently when people talk about methodologies. Unfortunately, many programmers still do not follow it, fearing that it will impose a further burden on the already difficult life of the developer."
        ]
      },
      {
        "section_title": "Part 3 discusses how you should write unit tests and what you should test.",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "In this chapter I will try to outline the basic concept of TDD and to show you how your job as a programmer can greatly benefit from it. I will develop a very simple project to show how to practically write software following this methodology."
        ]
      },
      {
        "section_title": "Part 4 introduces mock objects and shows how to use them practically.",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "Part 5 extends mocks with patches and show how to deal with the most common test cases."
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706044"
    },
    "id": 35,
    "category": "category 01",
    "title": "Creating a Coding Interview Study Guide",
    "content": [{
        "section_title": "A real-life example",
        "section_content": [
          "Let's start with a simple example taken from a programmer's everyday life.",
          "TDD is a methodology, something that can help you to create better code. But it is not going to solve all your problems. As with all methodologies you have to pay attention not to commit blindly to it. Try to understand the reasons why certain practices are suggested by the methodology and you will also understand when and why you can or have to be flexible."
        ]
      },
      {
        "section_title": "The programmer is in the office with other colleagues, trying to nail down an issue in some part of the software. Suddenly the boss storms into the office, and addresses the programmer:",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "I guess you feel very sorry for the poor programmer. Apart from the aggressive attitude of the boss, what is the real issue in this conversation? At the end of it there is no hint for the programmer and their colleagues about what to do next. They don't have any clue about what they have to change. They can definitely try to work harder, but the boss didn't refer to actual figures, so it will be definitely hard for the developers to understand if they improved 'enough'."
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706047"
    },
    "id": 35,
    "category": "category 01",
    "title": "Creating a Coding Interview Study Guide",
    "content": [{
        "section_title": "1,000,000 grains of sand is a heap of sand (Premise 1)",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "A heap of sand minus one grain is still a heap. (Premise 2)",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "Where is the issue? The concept expressed by the word 'heap' is nebulous, it is not defined clearly enough to allow the process to find a stable point, or a solution."
        ]
      },
      {
        "section_title": "So 999,999 grains is a heap of sand.",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "A heap of sand minus one grain is still a heap. (Premise 2)"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706045"
    },
    "id": 35,
    "category": "category 01",
    "title": "Creating a Coding Interview Study Guide",
    "content": [{
        "section_title": "section_title 01",
        "section_content": [
          "For the time being, consider that this is a valid practice also outside the realm of software creation. Whoever runs a business knows that you need to be able to extract some numbers (KPIs) from the activity of your company, because it is by comparing those numbers with some predefined thresholds that you can easily tell if the business is healthy or not. KPIs are a form of test, and you have to define them in advance, according to the expectations or needs that you have.",
          "Pay attention. Nothing prevents you from changing the thresholds as a reaction to external events. You may consider that, given the incredible heat wave that hit your country, the amount of coats that your company sold could not reach the goal. So, because of a specific event, you can justify a change in the test (KPI). If you didn't have the test you would have just generically recorded that you earned less money."
        ]
      },
      {
        "section_title": "Going back to software and TDD, following this methodology you are forced to state clear goals like",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706049"
    },
    "id": 35,
    "category": "category 01",
    "title": "As you can see there are many things that are tested by this statement.",
    "content": [{
        "section_title": "The function exists and can be imported",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "The function exists and can be imported",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "The function exists and can be imported",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706050"
    },
    "id": 35,
    "category": "category 01",
    "title": "Pay attention that at this stage there is no code that implements the function sum, the tests will fail for sure.",
    "content": [{
        "section_title": "The function accepts two integers",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "The function accepts two integers",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "The function accepts two integers",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706051"
    },
    "id": 35,
    "category": "category 01",
    "title": "A simple TDD project",
    "content": [{
        "section_title": "The project we are going to develop is available at https://github.com/lgiordani/simple_calculator.",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This project is purposefully extremely simple. You don't need to be an experienced Python programmer to follow this chapter, but you need to know the basics of the language. The goal of this series of posts is not that of making you write the best Python code, but that of allowing you learn the TDD work flow, so don't be too worried if your code is not perfect."
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This project is purposefully extremely simple. You don't need to be an experienced Python programmer to follow this chapter, but you need to know the basics of the language. The goal of this series of posts is not that of making you write the best Python code, but that of allowing you learn the TDD work flow, so don't be too worried if your code is not perfect."
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This project is purposefully extremely simple. You don't need to be an experienced Python programmer to follow this chapter, but you need to know the basics of the language. The goal of this series of posts is not that of making you write the best Python code, but that of allowing you learn the TDD work flow, so don't be too worried if your code is not perfect."
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706052"
    },
    "id": 35,
    "category": "category 01",
    "title": "Setup the project",
    "content": [{
        "section_title": "The repository is tagged, and at the end of each section you will find a link to the relative tag that contains the working solution.",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "The repository is tagged, and at the end of each section you will find a link to the relative tag that contains the working solution.",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "The repository is tagged, and at the end of each section you will find a link to the relative tag that contains the working solution.",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706053"
    },
    "id": 35,
    "category": "category 01",
    "title": "Create a virtual environment following your preferred process and install the requirements",
    "content": [{
        "section_title": "pip install -r requirements/dev.txt",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "pip install -r requirements/dev.txt",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "pip install -r requirements/dev.txt",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706054"
    },
    "id": 35,
    "category": "category 01",
    "title": "pip install -r requirements/dev.txt",
    "content": [{
        "section_title": "You should at this point be able to run",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "You should at this point be able to run"
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "line3"
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706055"
    },
    "id": 35,
    "category": "category 01",
    "title": "Requirements",
    "content": [{
        "section_title": "Step 1 - Adding two numbers",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "The first test we are going to write is one that checks if the class SimpleCalculator can perform an addition. Add the following code to the file tests/test_main.py"
        ]
      },
      {
        "section_title": "Step 1 - Adding two numbers",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "The first test we are going to write is one that checks if the class SimpleCalculator can perform an addition. Add the following code to the file tests/test_main.py"
        ]
      },
      {
        "section_title": "Step 1 - Adding two numbers",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "The first test we are going to write is one that checks if the class SimpleCalculator can perform an addition. Add the following code to the file tests/test_main.py"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706056"
    },
    "id": 35,
    "category": "category 01",
    "title": "The first test we are going to write is one that checks if the class SimpleCalculator can perform an addition. Add the following code to the file tests/test_main.py",
    "content": [{
        "section_title": "section_title 01",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "The test is a standard function (this is how pytest works), and the function name shall begin with test_ so that pytest can automatically discover all the tests. I tend to give my tests a descriptive name, so it is easier later to come back and understand what the test is about with a quick glance. You are free to follow the style you prefer but in general remember that naming components in a proper way is one of the most difficult things in programming. So better to get a handle on it as soon as possible."
        ]
      },
      {
        "section_title": "section_title 02",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "The body of the test function is pretty simple. The class SimpleCalculator is instantiated, and the method add of the instance is called with two numbers, 4 and 5. The result is stored in the variable result, which is later the subject of the test itself. The statement assert result == 9 first computes result == 9 which is a boolean, with a value that is either True or False. The keyword assert, then, silently passes if the argument is True, but raises an exception if it is False."
        ]
      },
      {
        "section_title": "section_title 03",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "The body of the test function is pretty simple. The class SimpleCalculator is instantiated, and the method add of the instance is called with two numbers, 4 and 5. The result is stored in the variable result, which is later the subject of the test itself. The statement assert result == 9 first computes result == 9 which is a boolean, with a value that is either True or False. The keyword assert, then, silently passes if the argument is True, but raises an exception if it is False."
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706057"
    },
    "id": 35,
    "category": "category 01",
    "title": "Save the file and go back to the terminal. Execute py.test -svv and you should receive the following error message",
    "content": [{
        "section_title": "Save the file and go back to the terminal. Execute py.test -svv and you should receive the following error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "line2"
        ]
      },
      {
        "section_title": "Let's fix this issue. Open the file simple_calculator/main.py and add this code",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "Save the file and go back to the terminal. Execute py.test -svv and you should receive the following error message"
        ]
      },
      {
        "section_title": "Let's fix this issue. Open the file simple_calculator/main.py and add this code",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "line3"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706058"
    },
    "id": 35,
    "category": "category 01",
    "title": "The second part of the output shows the list of files containing tests and the result of each test",
    "content": [{
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997712e2706058"
    },
    "id": 35,
    "category": "category 01",
    "title": "The second part of the output shows the list of files containing tests and the result of each test",
    "content": [{
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997715e2706058"
    },
    "id": 35,
    "category": "category 01",
    "title": "The second part of the output shows the list of files containing tests and the result of each test",
    "content": [{
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f927715e2706058"
    },
    "id": 35,
    "category": "category 01",
    "title": "The second part of the output shows the list of files containing tests and the result of each test",
    "content": [{
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  },
  {
    "_id": {
      "$oid": "5fa844ab3f997711e2706058"
    },
    "id": 35,
    "category": "category 01",
    "title": "The second part of the output shows the list of files containing tests and the result of each test",
    "content": [{
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "In this post I'm going to be compiling all of the computer science concepts I've learned to create a study guide on most of the general technical skills you would need to know. If there's anything I missed please let me know and I'll be sure to add it to the list. All of the code for this is going to be in Javascript. If I previously posted about a topic I'll be sure to link to it. Here we go.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "You're going to need to know iteration and recursion, arrays and matrices, linked lists, queues, stacks, heaps, sets, hash maps, trees, binary search, graphs, traversals like breadth-first search and depth-first search, tries, and sorting algorithms (particularly merge sort and quick sort). Also knowing some dynamic programming concepts could be helpful such as memoization and divide and conqueror.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      },
      {
        "section_title": "And again, as you notice, we made the smallest possible addition to the code to pass the test. Running pytest again you should receive a different error message",
        "section_content": [
          "The file with all of the code examples can be found here. I'll be continuously updating this file in the future and plan on posting a similar cheatsheet with all of the code implemented in Ruby.",
          "This is the first proper pytest failure report that we receive, so it's time to learn how to read the output. The first lines show you general information about the system where the tests are run"
        ]
      }
    ],
    "comment": [{
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      },
      {
        "content": "content 01",
        "comment_date": "2020-10-17",
        "child": [{
            "content": "content child 01",
            "comment_date": "2020-10-17"
          },
          {
            "content": "content child 02",
            "comment_date": "2020-10-17"
          }
        ]
      }
    ],
    "date": {
      "$date": "2020-11-08T19:19:07.240Z"
    }
  }
]